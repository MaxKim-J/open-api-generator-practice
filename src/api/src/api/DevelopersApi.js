/**
 * Simple Developer API
 * Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Developer from '../model/Developer';

/**
* Developers service.
* @module api/DevelopersApi
* @version 1.0.0
*/
export default class DevelopersApi {

    /**
    * Constructs a new DevelopersApi. 
    * @alias module:api/DevelopersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addInventory operation.
     * @callback module:api/DevelopersApi~addInventoryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new Developer
     * 새로운 개발자를 추가합니다
     * @param {Object} opts Optional parameters
     * @param {module:model/Developer} opts.developer Inventory item to add
     * @param {module:api/DevelopersApi~addInventoryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addInventory(opts, callback) {
      opts = opts || {};
      let postBody = opts['developer'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/developers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchInventory operation.
     * @callback module:api/DevelopersApi~searchInventoryCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Developer>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * searches all developers
     * 모든 개발자들을 조회합니다 
     * @param {module:api/DevelopersApi~searchInventoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Developer>}
     */
    searchInventory(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Developer];
      return this.apiClient.callApi(
        '/developers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
